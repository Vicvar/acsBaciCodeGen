/**
 */
package baciCodeGen.impl;

import baciCodeGen.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class BaciCodeGenFactoryImpl extends EFactoryImpl implements BaciCodeGenFactory {
	/**
	 * Creates the default factory implementation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static BaciCodeGenFactory init() {
		try {
			BaciCodeGenFactory theBaciCodeGenFactory = (BaciCodeGenFactory)EPackage.Registry.INSTANCE.getEFactory(BaciCodeGenPackage.eNS_URI);
			if (theBaciCodeGenFactory != null) {
				return theBaciCodeGenFactory;
			}
		}
		catch (Exception exception) {
			EcorePlugin.INSTANCE.log(exception);
		}
		return new BaciCodeGenFactoryImpl();
	}

	/**
	 * Creates an instance of the factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public BaciCodeGenFactoryImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EObject create(EClass eClass) {
		switch (eClass.getClassifierID()) {
			case BaciCodeGenPackage.CHARACTERISTIC_COMPONENT: return createCharacteristicComponent();
			case BaciCodeGenPackage.PROPERTY: return createProperty();
			case BaciCodeGenPackage.CHARACTERISTIC: return createCharacteristic();
			case BaciCodeGenPackage.ATTRIBUTE: return createAttribute();
			case BaciCodeGenPackage.DEV_IO: return createDevIO();
			default:
				throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
		}
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public CharacteristicComponent createCharacteristicComponent() {
		CharacteristicComponentImpl characteristicComponent = new CharacteristicComponentImpl();
		return characteristicComponent;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Property createProperty() {
		PropertyImpl property = new PropertyImpl();
		return property;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Characteristic createCharacteristic() {
		CharacteristicImpl characteristic = new CharacteristicImpl();
		return characteristic;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Attribute createAttribute() {
		AttributeImpl attribute = new AttributeImpl();
		return attribute;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public DevIO createDevIO() {
		DevIOImpl devIO = new DevIOImpl();
		return devIO;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public BaciCodeGenPackage getBaciCodeGenPackage() {
		return (BaciCodeGenPackage)getEPackage();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @deprecated
	 * @generated
	 */
	@Deprecated
	public static BaciCodeGenPackage getPackage() {
		return BaciCodeGenPackage.eINSTANCE;
	}

} //BaciCodeGenFactoryImpl
